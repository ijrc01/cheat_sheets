Windows Update Service Remiedation
  net stop wuauserv
  net stop bits
  rename %windir%\SoftwareDistribution SoftwareDistribution.bak
  net stop cryptSvc
  net stop msiserver
  SC config wuauserv start= auto
  SC config bits start= auto
  SC config cryptsvc start= auto
  SC config trustedinstaller start= auto
  net start wuauserv
  net start bits
  net start cryptSvc
  net start msiserver
  
Windows 10 Troubleshooting
  CHKDSK /scan
  CHKDSK /f c:
  SFC /scannow
  DISM /Online /Cleanup-Image /CheckHealth
  DISM /Online /Cleanup-Image /ScanHealth
  DISM /Online /Cleanup-image /Restorehealth

Find Large Files
  (cmd)
    for /r c:\ %i in (*) do @if %~zi gtr 100000000 echo %i %~zi		            files greater than 100MB
    for /r c:\ %i in (*) do @if %~zi gtr 500000000 echo %i %~zi		            files greater than 500MB
    for /r c:\ %i in (*) do @if %~zi gtr 1000000000 echo %i %~zi	            files greater than 1GB
  (PS)
    Get-ChildItem -Path C:\ -recurse | where-object {$_.length -gt 500000000} | Sort-Object length | ft fullname, length, CreationTime, LastAccessTime  -auto
    Get-ChildItem -Path C:\ -recurse | where-object {$_.length -gt 100000000} | Sort-Object length | ft fullname, length, CreationTime, LastAccessTime  -auto
    Get-ChildItem -Path C:\ -recurse | where-object {$_.length -gt 50000000} | Sort-Object length | ft fullname, length, CreationTime, LastAccessTime  -auto
    Get-ChildItem -Path .   -recurse | where-object {$_.length -gt 50000000} | Sort-Object length | ft fullname, length, CreationTime, LastAccessTime  -auto
    
    Get-ChildItem -Path C:\Windows\SoftwareDistribution\Download\* -Recurse | where-object {$_.length -gt 100000000} | Sort-Object length | ft fullname, length, CreationTime, LastAccessTime  -auto
    Get-ChildItem -Path C:\Windows\Temp\ -Recurse | where-object {$_.length -gt 100000000} | Sort-Object length | ft fullname, length, CreationTime, LastAccessTime  -auto
    Get-ChildItem -Path $env:TEMP -Recurse | where-object {$_.length -gt 100000000} | Sort-Object length | ft fullname, length, CreationTime, LastAccessTime  -auto
    Get-ChildItem -Path C:\Users\*\Downloads\*.* -Recurse -Force | where-object {$_.length -gt 100000000} | Sort-Object length | ft fullname, length -auto
        See parameters in addition to fullname, length: get-childitem | get-member
    
List files in directory with wildcard path (powershell)
  Get-ChildItem -Path C:\Users\*\Downloads\*.* -Recurse -Force | where-object {$_.length -gt 100000000} | Sort-Object length | ft fullname, length -auto
  Get-ChildItem -Path C:\Users\*\AppData\Local\Microsoft\Outlook\*.ost | Sort-Object length | ft fullname, length -auto
  
  
Windows Clean Disk to clear up HD space
  cleanmgr /AUTOCLEAN                                           remove files from the previous Windows installation or the previous in-place upgrade automatically; runs silently
  DISM.exe /Online /Cleanup-Image /AnalyzeComponentStore        Check if WinSxS folder needs cleanup
   DISM.exe /Online /Cleanup-Image /StartComponentCleanup /ResetBase  Perform WinSxS cleanup  

Windows Event Log - failed/successfull logins
  4625 - Message - An account failed to log on
  4624 - Message - An account was successfully logged on
  
    2 – Interactive – GUI                 Locally, when the user has direct access to the console
    3 – Network – Net Use (SMB share)	  Only used after an account authentication such as user, computer, service has already taken place;  accessing shared folders, printers, GPOs, and most logons to IIS. 
    4 – Batch                             Scheduled task execution; possibly executing on behalf of user
    5 – Service                           Windows services; Starting of a service first results in a Logon/Logoff event
    7 – Unlock                            User unlocks the password protected screen after idle/screensaver
    8 – Network Clear Text                IIS’s basic authentication mode; FTP via IIS
    9 – New Credentials (RDP Tools)       RunAs command to start a program under a different user account with the /netonly switch
    10 – Remote Interactive (RDP) 			  Remotely, through Terminal Services
    11 – Cached Interactive (laptops)     When client is off the network or DC is unavailable, Windows uses hashes to verify the identity

Ping to test packet loss
  ping -n 50 -l 1000 8.8.8.8
  
Windows File Locations
  C:\Windows\SoftwareDistribution\Download			              windows updates download location
  C:\Windows\System32\winevt\Logs 					                  windows event logs
  C:\ProgramData\MspPlatform\FileCacheServiceAgent\cache      Solarwinds patch cache
  C:\Users\All Users\MspPlatform\FileCacheServiceAgent\cache  Solarwinds patch cache alternative
  C:\ProgramData\MspPlatform\PME\archives                     Solarwinds patch archive
  
  
Silently install .msu
  wusa.exe windows10.0-kb5003169.msu /quiet /norestart
  
Expand .msu to get .cab and then install
  mkdir c:\TEMP\KB2992611
  expand -F:* "Windows6.1-KB2992611-x64.msu" "c:\TEMP\KB2992611"
  cd KB2992611
  dism.exe /online /add-package /packagepath:"Windows6.1-KB2992611-x64.cab" /quiet /norestart /logpath:"install_log.txt"
  
Windows Event Viewer (Powershell)
  Get-WinEvent -FilterHashtable @{LogName='Security'; ID=4624} -MaxEvents 5 | Format-List                           Show recent successful logins from Security log
  Get-WinEvent -FilterHashtable @{LogName='Security'; ID=4625} -MaxEvents 5 | Format-List                           Show recent failed logins from Security log
  Get-WinEvent -FilterHashtable @{LogName='Microsoft-Windows-PowerShell/Operational'} -MaxEvents 5 | Format-List    Show log PowerShell/Operational
  Get-WinEvent -FilterHashtable @{LogName='Microsoft-Windows-PowerShell/Operational'; ID=4104} | Select-Object -Property Message | Select-String -Pattern 'SecureString'
 
Disable SSLv2/3 from regedit
 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\
  new key 'SSL 3.0'
   new key 'Server'
    new string value 'Enabled=0'
    new string value 'DisabledByDefault=1'
   new key 'Client'
    new string value 'Enabled=0'
    new string value 'DisabledByDefault=1'
    
  Alternative tool: IISCrypto https://www.nartac.com/Products/IISCrypto/
  
WMIC
  wmic OS GET NAME 						                                                                                        Return OS name
  wmic qfe list full /format:table 		                                                                                List of installed KBs (alternative: systeminfo)
  wmic useraccount where "LocalAccount='TRUE'" get Caption, Disabled, Domain, Lockout, PasswordExpires, SID, Status   List of local accounts
  wmic process get ProcessId,Description,ParentProcessId,ReadOperationCount,WriteOperationCount                       List running processes
  wmic product get Caption,Vendor,version,InstallDate                                                                 List installed applications
  wmic product where name="AppName" call uninstall                                                                    Uninstall application (from wmic product get name)
      
  query WMIC on remote domain-joined PC: /NODE:10.10.10.97 /USER:"domain\user"                                        #where 'domain\user' is domain admin
  WMIC /NODE:192.168.1.1 COMPUTERSYSTEM GET USERNAME                                                                  Display signed-in users

Stop Running Process via Powershell
tasklist
 Get-Process -id 12345
  Stop-Process -Name "TakeControlRDLdr" -Force
 
Reg Query
  reg query HKLM\Software\Microsoft\Windows\CurrentVersion\Uninstall                  Display software which can be uninstalled
  reg query HKLM\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall      Display software which can be uninstalled
   
Service Management
  sc getkeyname "Windows Update"
  sc query wuauserv
  sc config wuauserv start= auto
  net stop wuauserv
  net start wuauserv
  
Service Investigation
  sc getkeyname "CrowdStrike Falcon"    --query display name for service name
  sc query csfalconservice              --query service for status
  sc qc csfalconservice                 --query service for binary path (ie "C:\Program Files\CrowdStrike\CSFalconService.exe")
  sc queryex csfalconservice            --query service for assoicated task PID
    taskkill /pid <#> /F                  --kill assoicated task PID
  
SMB Network Shares
  Get-Acl -Path \\Server01\ShareName  | Format-Table -Wrap        NTFS fileshares
  
  Remote enumerate folder share permissions
    script.ps1:
      $shares = Get-SMBShare 
      Foreach($share in $shares){Get-SmbShareAccess -Name $share.Name}
    Then:
      Invoke-Command -FilePath .\script.ps1 -ComputerName 'Server01'
  
  Report on localhost path name assoicated with Network Share
    $Result = Invoke-Command -ScriptBlock { Get-SMBShare } -ComputerName 'Server01'
    $Result | Export-Csv .\Get-SMBShare.csv -NoTypeInformation
    
Enable Powershell
  Set-ExecutionPolicy -ExecutionPolicy AllSigned -Scope Process
  
query user       see users currently signed into machine
 
Mozilla Firefox
  [install directory]\uninstall\helper.exe /S         Silent un-install
  firefox -v                                          Check version
  
Delete all files order than X days (PS)
  $Path = "C:\Windows\SoftwareDistribution\Download\"
  $Daysback = "-30"
 
  $CurrentDate = Get-Date
  $DatetoDelete = $CurrentDate.AddDays($Daysback)
  Get-ChildItem $Path -Recurse | Where-Object { $_.LastWriteTime -lt $DatetoDelete } | Remove-Item
  
Windows Startup Folder
 Current User
  run --> shell:startup
    which is C:\Users\[user]\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup
 All Users
  run --> shell:common startup
    which is C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp
    
Variables (CLI)
  See all currently defined environment variables : set
  Query variable profile : set USERPROFILE
  %USERPROFILE% : C:\Users\John
  %ALLUSERSPROFILE% : C:\ProgramData
  
Variables (PowerShell)
  $env:USERPROFILE : C:\Users\John
  
Delete Commands (cli)
del /q "C:\Program Files (x86)\Folder"        delete FILES in \Folder quietly without prompt
rmdir /q /s "C:\Program Files (x86)\Folder"   delete folder and sub-directors, quietly without prompt

